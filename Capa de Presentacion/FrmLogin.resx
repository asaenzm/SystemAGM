<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XSeuTweoAAAAAElFTkSuQmCC
</value>
  </data>
</root>